"""init_database

Revision ID: 2c93caa981c3
Revises: 
Create Date: 2025-04-19 00:14:58.134200

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2025_04_19_init_database'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('login', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('firstname', sa.String(), nullable=True),
    sa.Column('lastname', sa.String(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Double(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('aim', sa.String(), nullable=True),
    sa.Column('activity_level', sa.String(), nullable=True),
    sa.Column('recommended_calories', sa.Double(), nullable=True),
    sa.Column('profile_picture', sa.LargeBinary(), nullable=True),
    sa.Column('registered_at', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_login'), 'user', ['login'], unique=True)
    op.create_table('meal',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('weight', sa.Double(), nullable=False),
    sa.Column('calories', sa.Double(), nullable=False),
    sa.Column('proteins', sa.Double(), nullable=False),
    sa.Column('fats', sa.Double(), nullable=False),
    sa.Column('carbohydrates', sa.Double(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('recorded_at', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meal_id'), 'meal', ['id'], unique=False)
    op.create_index(op.f('ix_meal_name'), 'meal', ['name'], unique=False)
    op.create_index(op.f('ix_meal_user_id'), 'meal', ['user_id'], unique=False)
    op.create_table('product',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('weight', sa.Double(), nullable=False),
    sa.Column('calories', sa.Double(), nullable=False),
    sa.Column('proteins', sa.Double(), nullable=False),
    sa.Column('fats', sa.Double(), nullable=False),
    sa.Column('carbohydrates', sa.Double(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('picture', sa.LargeBinary(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_id'), 'product', ['id'], unique=False)
    op.create_index(op.f('ix_product_name'), 'product', ['name'], unique=True)
    op.create_index(op.f('ix_product_user_id'), 'product', ['user_id'], unique=False)
    op.create_table('user_weight',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('weight', sa.Double(), nullable=False),
    sa.Column('recorded_at', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_weight_recorded_at'), 'user_weight', ['recorded_at'], unique=False)
    op.create_index(op.f('ix_user_weight_user_id'), 'user_weight', ['user_id'], unique=False)
    op.create_table('meal_products',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('product_weight', sa.Double(), nullable=False),
    sa.Column('meal_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['meal_id'], ['meal.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('meal_id', 'product_id', name='uq_meal_product')
    )
    op.create_index(op.f('ix_meal_products_meal_id'), 'meal_products', ['meal_id'], unique=False)
    op.create_index(op.f('ix_meal_products_product_id'), 'meal_products', ['product_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_meal_products_product_id'), table_name='meal_products')
    op.drop_index(op.f('ix_meal_products_meal_id'), table_name='meal_products')
    op.drop_table('meal_products')
    op.drop_index(op.f('ix_user_weight_user_id'), table_name='user_weight')
    op.drop_index(op.f('ix_user_weight_recorded_at'), table_name='user_weight')
    op.drop_table('user_weight')
    op.drop_index(op.f('ix_product_user_id'), table_name='product')
    op.drop_index(op.f('ix_product_name'), table_name='product')
    op.drop_index(op.f('ix_product_id'), table_name='product')
    op.drop_table('product')
    op.drop_index(op.f('ix_meal_user_id'), table_name='meal')
    op.drop_index(op.f('ix_meal_name'), table_name='meal')
    op.drop_index(op.f('ix_meal_id'), table_name='meal')
    op.drop_table('meal')
    op.drop_index(op.f('ix_user_login'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
